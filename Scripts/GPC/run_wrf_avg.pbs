#!/bin/bash
#MOAB/Torque submission script for SciNet GPC

## queue/PBS settings
#PBS -l nodes=1:ppn=8
#PBS -l walltime=01:00:00
# merge standard error and output stream
#PBS -j oe
#PBS -o $PBS_JOBNAME.$PBS_JOBID.out
# send email if abort (nbae)
#PBS -M aerler@atmosp.physics.utoronto.ca
#PBS -m ae
# job name
#PBS -N wrf_avg_test
## submit to queue (NB: this has to be the last PBS line!)
# batch (default), debug, largemem
#PBS -q batch

# load some modules
echo
hostname
uname
echo
date
echo
module purge
module load intel/14.0.1 gcc/4.9.0 hdf5/1811-v18-serial-intel netcdf/4.2.1.1_serial-intel python/2.7.8
module list
echo

# general settings
INIDIR="${PBS_O_WORKDIR}"
SCRIPTDIR="${INIDIR}/scripts/" # default location of averaging script
AVGSCRIPT='run_wrf_avg.pbs' # name of this script...
PYAVG='wrfout_average.py' # name of Python averaging script
DOMAINS='1234' # string of single-digit domain indices

# return to original working directory
cd "${INIDIR}"

# influential enviromentvariables for averaging script
export PYAVG_THREADS=${PYAVG_THREADS:-8}
export PYAVG_DOMAINS=${PYAVG_DOMAINS:-"$DOMAINS"}
export PYAVG_FILETYPES=${PYAVG_FILETYPES:-''} # use default
# options that would interfere with yearly updates
export PYAVG_OVERWRITE=${PYAVG_OVERWRITE:-'FALSE'}
export PYAVG_ADDNEW=${PYAVG_ADDNEW:-'FALSE'} 
export PYAVG_RECOVER=${PYAVG_RECOVER:-'FALSE'}
export PYAVG_DEBUG=${PYAVG_DEBUG:-'FALSE'} # add more debug output


# launch script
echo
if [[ -n "${PERIOD}" ]]; then
    time -p python "${SCRIPTDIR}/${PYAVG}" "${PERIOD}"
    ERR=$? # capture exit code      
else

    # make sure, certain variables are there...
    ~/Scripts/addVariable.sh 'ACSNOW'
    ~/Scripts/addVariable.sh 'SNOWNC'
    ~/Scripts/addVariable.sh 'SR'
    ~/Scripts/addVariable.sh 'T2MEAN'
    ~/Scripts/addVariable.sh 'TSLB' # this variable will be removed!
    ~/Scripts/addVariable.sh 'PBLH'
    
    # launch actual averaging script
    time -p python "${SCRIPTDIR}/${PYAVG}"
    ERR=$? # capture exit code
fi
echo

# exit with exit code from python script
exit ${ERR}
