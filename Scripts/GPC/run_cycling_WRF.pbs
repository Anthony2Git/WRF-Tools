#!/bin/bash
#MOAB/Torque submission script for SciNet GPC

## queue/PBS settings
##PBS -l nodes=1:ppn=8 
##PBS -l walltime=0:15:00
#PBS -l nodes=8:ppn=8
#PBS -l walltime=0:30:00
##PBS -W x=nodesetisoptional:false 
# std and error output
#PBS -j oe
#PBS -o $PBS_JOBNAME.$PBS_JOBID.out
##PBS -e $PBS_JOBNAME.$PBS_JOBID.err
# send email if abort (nbae)
#PBS -M aerler@atmosp.physics.utoronto.ca
#PBS -m ae
# job name
#PBS -N cycling_WRF
# job dependency (this ${PBS_JOBNAME%_WRF}_WPS does not work)
#PBS -W depend:afterok:cycling_WPS
## submit to queue (NB: this has to be the last PBS line!)
# batch (default), debug, largemem
#PBS -q batch 

# check if $NEXTSTEP is set, and exit, if not
set -e # abort if anything goes wrong
if [[ -z "${NEXTSTEP}" ]]; then exit 1; fi
CURRENTSTEP="${NEXTSTEP}" # $NEXTSTEP will be overwritten


## job settings
export SCRIPTNAME="run_${PBS_JOBNAME}.pbs" # WRF suffix assumed
export CLEARWDIR=0 # do not clear working director
# run configuration
export NODES=${PBS_NUM_NODES} # set in PBS section
export TASKS=16 # number of MPI task per node (Hpyerthreading!)
export THREADS=1 # number of OpenMP threads
# directory setup
export INIDIR="${PBS_O_WORKDIR}"
export RUNNAME="${CURRENTSTEP}" # strip WRF suffix
export WORKDIR="${INIDIR}/${RUNNAME}/"
export RAMDISK="/dev/shm/aerler/"

## real.exe settings
# optional arguments: $RUNREAL, $RAMIN, $RAMOUT
# folders: $REALIN, $REALOUT
# N.B.: RAMIN/OUT only works within a single node!

## WRF settings
# optional arguments: $RUNWRF, $GHG ($RAD, $LSM) 
export GHG='A2' # GHG emission scenario
# folders: $WRFIN, $WRFOUT, $TABLES
export REALOUT="${WORKDIR}" # this should be default anyway
export WRFIN="${WORKDIR}" # same as $REALOUT
export WRFOUT="${INIDIR}/wrfout/" # output directory


## setup environment
cd "${INIDIR}"
source setupGPC.sh # load machine-specific stuff


## start execution
# work in existing work dir, created by caller instance
# N.B.: don't remove namelist files in working directory

# read next step from stepfile
NEXTSTEP=$(python cycling.py ${CURRENTSTEP})

# launch WPS for next step (if $NEXTSTEP is not empty)
if [[ -n "${NEXTSTEP}" ]]
 then
	echo "   ***   Launching WPS for next step: ${NEXTSTEP}   ***   "
	echo
	# submitting independent WPS job
	ssh gpc01 "cd ${INIDIR}; qsub ./run_cycling_WPS.pbs -v NEXTSTEP=${NEXTSTEP}"
fi


## run WRF for this step
echo
echo "   ***   Launching WRF for current step: ${CURRENTSTEP}   ***   "
date
echo

# prepare directory
cd "${INIDIR}"
./prepWorkDir.sh # don't remove working directory ($CLEARWDIR=0)
# run script
./execWRF.sh
# mock restart files for testing (correct linking)
#if [[ -n "${NEXTSTEP}" ]]; then	  
#	touch "${WORKDIR}/wrfrst_d01_${NEXTSTEP}_00"
#	touch "${WORKDIR}/wrfrst_d01_${NEXTSTEP}_01" 
#fi 
wait # wait for WRF and WPS to finish

# end timing
echo
echo "   ***   WRF step ${CURRENTSTEP} completed   ***   "
date
echo

## launch WRF for next step (if $NEXTSTEP is not empty)
if [[ -n "${NEXTSTEP}" ]]
 then
	NEXTDIR="${INIDIR}/${NEXTSTEP}" # next $WORKDIR
	cd "${NEXTDIR}"
	# link restart files
	echo 
	echo "Linking restart files to next working directory:"
	echo "${NEXTDIR}"
	# N.B.: find is necessary to avoid linking all the linked restart files again
	#find "${WORKDIR}" -maxdepth 1 -type f -name "wrfrst_d??_*" -exec ln -fs {} \;
	for RESTART in "${WORKDIR}"/wrfrst_d??_*; do
		if [[ ! -h "${RESTART}" ]]; then ln -sf "${RESTART}"; fi
	done
	# reset restart output timer manually ('override_restart_time' does not seem to work)
	#module load udunits/2.1.11 nco/4.0.8-intel-nocxx 	
	#for RESTART in wrfrst_d??_*; do 
	#	ncatted -O -a 'WRF_ALARM_SECS_TIL_NEXT_RING_51,global,o,l,0' "${RESTART}"
	#	ncatted -O -a 'WRF_ALARM_SECS_TIL_NEXT_RING_55,global,o,l,0' "${RESTART}"
	#done 
	# start next cycle
	cd "${INIDIR}"
	echo
	echo "   ***   Launching WRF for next step: ${NEXTSTEP}   ***   "
	echo
	ssh gpc01 "cd ${INIDIR}; qsub ./run_cycling_WRF.pbs -v NEXTSTEP=${NEXTSTEP}"
fi
