#!/bin/bash
#MOAB/Torque submission script for SciNet GPC

## queue/PBS settings
#PBS -l nodes=16:ppn=8
#PBS -l walltime=6:00:00
# std and error output
#PBS -j oe
#PBS -o $PBS_JOBNAME.$PBS_JOBID.out
# send email if abort (nbae)
#PBS -M aerler@atmosp.physics.utoronto.ca
#PBS -m a
# job name
#PBS -N cycling_WRF
# job dependency
#PBS -W depend:afterok:cycling_WPS
# N.B.: this ${PBS_JOBNAME%_WRF}_WPS does not work
## submit to queue (NB: this has to be the last PBS line!)
# batch (default), debug, largemem
#PBS -q batch

set -e # abort if anything goes wrong
# check if $NEXTSTEP is set, and exit, if not
if [[ -z "${NEXTSTEP}" ]]; then
  echo 'Environment variable $NEXTSTEP not set - aborting!'
  exit 1
fi
CURRENTSTEP="${NEXTSTEP}" # $NEXTSTEP will be overwritten

## job settings
export SCRIPTNAME="run_cycling_WRF.pbs" # WRF suffix assumed
export DEPENDENCY="run_cycling_WPS.pbs" # WRF suffix assumed, WPS suffix substituted: ${JOBNAME%_WRF}_WPS
export ARSCRIPT="" # archive script to be executed after WRF finishes
export ARINTERVAL="" # default: every time
export CLEARWDIR=0 # do not clear working director
# run configuration
export NODES=${PBS_NUM_NODES} # set in PBS section
export TASKS=16 # number of MPI task per node (Hpyerthreading!)
export THREADS=1 # number of OpenMP threads
# directory setup
export INIDIR="${PBS_O_WORKDIR}"
export RUNNAME="${CURRENTSTEP}" # strip WRF suffix
export WORKDIR="${INIDIR}/${RUNNAME}/"
export RAMDISK="/dev/shm/aerler/"

## WRF settings
# optional arguments: $RUNWRF, $GHG ($RAD, $LSM)
export GHG='' # GHG emission scenario
export RAD='' # radiation scheme
export LSM='' # land surface scheme
# folders: $WRFIN, $WRFOUT, $TABLES
export REALOUT="${WORKDIR}" # this should be default anyway
export WRFIN="${WORKDIR}" # same as $REALOUT
export WRFOUT="${INIDIR}/wrfout/" # output directory
export RSTDIR="${WRFOUT}"

# setup environment
cd "${INIDIR}"
source setup_GPC.sh # load machine-specific stuff

## pre-processing
# work in existing work dir, created by previous job
# N.B.: don't remove namelist files in working directory

# read next step from stepfile
NEXTSTEP=$(python cycling.py ${CURRENTSTEP})

# launch WPS for next step
./launchPreP.sh # primarily for WPS and real.exe

# prepare directory
cd "${INIDIR}"
./prepWorkDir.sh # don't remove working directory ($CLEARWDIR=0)

## run WRF for this step
# start timing
echo
echo "   ***   Launching WRF for current step: ${CURRENTSTEP}   ***   "
date
echo

# run script
./execWRF.sh
ERR=$? # capture exit code
# mock restart files for testing (correct linking)
#if [[ -n "${NEXTSTEP}" ]]; then
#	touch "${WORKDIR}/wrfrst_d01_${NEXTSTEP}_00"
#	touch "${WORKDIR}/wrfrst_d01_${NEXTSTEP}_01"
#fi

if [[ $ERR != 0 ]]; then
  # end timing
  echo
  echo "   ###   WARNING: WRF step ${CURRENTSTEP} failed   ###   "
  date
  echo
  exit ${ERR} # abort if error occured!
fi # if error

# end timing
echo
echo "   ***   WRF step ${CURRENTSTEP} completed   ***   "
date
echo

## launch post-processing
./launchPostP.sh # mainly archiving, but may include actual post-processing

## resubmit job for next step
./resubJob.sh # requires submission command from setup script

# copy driver script into work dir to signal completion
cp "${INIDIR}/${SCRIPTNAME}" "${WORKDIR}"
